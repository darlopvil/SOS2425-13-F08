name: CI/CD

on: [push, pull_request]

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install backend dependencies
        run: npm install

      - name: Install frontend dependencies
        run: cd front && npm install

      - name: Fix npm dependencies issue
        run: |
          cd front
          rm -rf node_modules package-lock.json
          npm cache clean --force
          npm install
          
      - name: Build frontend
        run: cd front && npm run build
        
      - name: Check handler.js exists
        run: test -f front/build/handler.js

      - name: Run backend tests
        run: npm test

      - name: Run server for e2e tests
        run: |
          # Iniciar el servidor de backend y frontend en paralelo
          npm run start &  # Backend
          cd front && npm run start &  # Frontend en el puerto 5173
          
          # Esperar a que los servidores estén listos
          echo "Esperando que el servidor backend y frontend inicien..."
          sleep 10
          
          # Verificar que ambos servidores están activos
          echo "Verificando que el servidor backend responde..."
          npx wait-on http://localhost:16078 -t 30000  # Cambia si el puerto del backend es otro
          
          echo "Verificando que el frontend responde..."
          npx wait-on http://localhost:5173 -t 30000  # Asegurarse de que el frontend está listo

      - name: Install Playwright dependencies
        run: |
          npx playwright install --with-deps
          npm install -g wait-on

      - name: Run Playwright tests
        run: npx playwright test
        env:
          # Usar el puerto detectado dinámicamente para las pruebas
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:${{ env.SERVER_PORT }}

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}

